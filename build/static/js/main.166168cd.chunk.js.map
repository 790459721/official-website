{"version":3,"sources":["utils/util.rem.js","components/TopNav.js","pages/Base/Base.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setRem","pwidth","prem","html","document","getElementsByTagName","oWidth","body","clientWidth","documentElement","style","fontSize","TopNav","useState","menuState","setMenuState","useEffect","bodyDom","querySelector","height","overflow","handleMenuState","className","onClick","type","window","location","href","e","target","includes","hiddenMenu","activeClassName","to","Base","props","routes","route","renderRoutes","HomePage","lazy","AdvantagePage","ArticlePage","InsurancePage","ServicePage","ArticleDetailPage","AboutPage","SuspenseComponent","Component","fallback","path","component","exact","render","App","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.166168cd.chunk.js","sourcesContent":["var setRem = function (pwidth,prem){\n    var html = document.getElementsByTagName(\"html\")[0];\n    var oWidth = document.body.clientWidth || document.documentElement.clientWidth;\n    html.style.fontSize = oWidth/pwidth*prem + \"px\";\n  }\n  \n  module.exports = {\n    setRem: setRem\n  };","/*\n * @Author: your name\n * @Date: 2020-06-24 22:44:25\n * @LastEditTime: 2020-06-25 02:04:26\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\official-website\\src\\components\\TopNav.js\n */\nimport React from 'react'\nimport '../style/components/TopNav.less'\nimport { NavLink } from 'react-router-dom'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nfunction TopNav() {\n    const [menuState, setMenuState] = useState(false)\n    useEffect(() => {\n        let bodyDom = document.querySelector('body')\n        if(menuState) {\n            bodyDom.style.height = '100vh'\n            bodyDom.style.overflow = 'hidden'\n        }else {\n            bodyDom.style.height = 'auto'\n            bodyDom.style.overflow = 'auto'\n        }\n    },[menuState])\n    const handleMenuState = () => {\n        setMenuState(!menuState)\n    }\n    const toDownLoad = () => {\n        window.location.href = 'https://static.app.dasurebao.com/common/download.html'\n    }\n    const hiddenMenu = (e) => {\n        if(e.target.className.includes('top_drawer_menu')) {\n            setMenuState(false)\n        }\n    }\n    return (\n        <div className='top_nav_box' >\n            <div className=\"top_nav_left\">\n                <div className='menu' onClick={handleMenuState}></div>\n                <div className=\"top_logo_box\">\n                    <div className='logo'></div>\n                    <div className=\"logo_slogan\"></div>\n                </div>\n            </div>\n            <button type='button' className='btn_download' onClick={toDownLoad}>下载APP</button>\n            <div className={`top_drawer_menu ${menuState ? 'show_menu' : ''}`} onClick={(e) => hiddenMenu(e)}>\n                <div className=\"drawer_menu_box\" >\n                    <div className=\"drawer_menu_top\">\n                        <div className=\"menu_logo\"></div>\n                        <div className=\"menu_slogan\"></div>\n                    </div>\n                    <div className=\"menu_list\">\n                        <NavLink className='menu_item'activeClassName='active_link' to='/home' onClick={handleMenuState}>\n                            首页\n                        </NavLink>\n                        <NavLink className='menu_item' activeClassName='active_link' to='/article' onClick={handleMenuState}>\n                            资讯文章\n                        </NavLink>\n                        <NavLink className='menu_item' activeClassName='active_link' to='/insurance' onClick={handleMenuState}>\n                            保险产品\n                        </NavLink>\n                        <NavLink className='menu_item' activeClassName='active_link' to='/service' onClick={handleMenuState}>\n                            服务体系\n                        </NavLink>\n                        <NavLink className='menu_item' activeClassName='active_link' to='/advantage' onClick={handleMenuState}>\n                            核心优势\n                        </NavLink>\n                        <NavLink className='menu_item' activeClassName='active_link' to='/about' onClick={handleMenuState}>\n                            关于我们\n                        </NavLink>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TopNav\n","/*\n * @Author: your name\n * @Date: 2020-06-25 22:22:38\n * @LastEditTime: 2020-06-25 22:43:10\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\official-website\\src\\pages\\Base\\Base.js\n */ \nimport React from 'react'\nimport { renderRoutes } from 'react-router-config'\nimport TopNav from '../../components/TopNav'\nimport '../../style/pages/Base.less'\nfunction Base(props) {\n    const { route : {routes} } = props\n    return (\n        <div className='base_wrapper'>\n            <TopNav/>\n            { renderRoutes(routes)}\n        </div>\n    )\n}\n\nexport default Base\n","/*\n * @Author: your name\n * @Date: 2020-06-24 22:44:56\n * @LastEditTime: 2020-06-25 22:36:56\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\official-website\\src\\routes\\index.js\n */ \nimport React, { lazy, Suspense } from 'react'\nimport { Redirect } from 'react-router-dom'\n// import Home from '../pages/Home/Home'\n// import Advantage from '../pages/Advantage/Advantage'\n// import Article from '../pages/Article/Article'\n// import Insurance from '../pages/Insurance/Insurance'\n// import Service from '../pages/Service/Service'\n// import About from '../pages/About/About'\n// import ArticleDetail from '../pages/ArticleDetail/ArticleDetail'\nimport Base from '../pages/Base/Base'\nconst HomePage = lazy(() => import('../pages/Home/Home'))\nconst AdvantagePage = lazy(() => import('../pages/Advantage/Advantage'))\nconst ArticlePage = lazy(() => import('../pages/Article/Article'))\nconst InsurancePage = lazy(() => import('../pages/Insurance/Insurance'))\nconst ServicePage = lazy(() => import('../pages/Service/Service'))\nconst ArticleDetailPage = lazy(() => import('../pages/ArticleDetail/ArticleDetail'))\nconst AboutPage = lazy(() => import('../pages/About/About'))\n\nconst SuspenseComponent = Component => props => {\n    return (\n        <Suspense fallback={null}>\n            <Component {...props}></Component>\n        </Suspense>\n    )\n}\n\nconst routes = [\n    {\n        path: '/',\n        component: Base,\n        routes: [\n            {\n                path: \"/\",\n                exact: true,\n                render: () => (\n                  <Redirect to={\"/home\"}/>\n                )\n            },\n            {\n                path: '/article',\n                component: SuspenseComponent(ArticlePage)\n            },\n            {\n                path: '/home',\n                component: SuspenseComponent(HomePage)\n            },\n            {\n                path: '/insurance',\n                component: SuspenseComponent(InsurancePage)\n            },\n            {\n                path: '/service',\n                component: SuspenseComponent(ServicePage)\n            },\n            {\n                path: '/advantage',\n                component: SuspenseComponent(AdvantagePage)\n            },\n            {\n                path: '/about',\n                component: SuspenseComponent(AboutPage)\n            },\n            {\n                path: '/articleDetail',\n                component: SuspenseComponent(ArticleDetailPage)\n            },\n\n        ]\n    }\n]\nexport default routes","/*\n * @Author: qinsensen\n * @Date: 2020-06-23 15:32:02\n * @LastEditors: Please set LastEditors\n * @LastEditTime: 2020-06-25 22:38:56\n * @Description: \n */ \nimport React from 'react';\nimport { Switch, BrowserRouter } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\nimport routes from './routes';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        { renderRoutes(routes)}\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * @Author: qinsensen\n * @Date: 2020-06-23 15:32:02\n * @LastEditors: qinsensen\n * @LastEditTime: 2020-06-23 16:18:54\n * @Description: \n */ \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { setRem } from './utils/util.rem';\nimport './style/common/rest.less'\nsetRem(750, 100)\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}
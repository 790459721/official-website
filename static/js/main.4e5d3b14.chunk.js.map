{"version":3,"sources":["images/home_banner_1.jpg","utils/util.rem.js","images/home_banner_2.jpg","components/TopNav.js","components/Slider.js","pages/About/About.js","routes/index.js","pages/Home/Home.js","pages/Article/Article.js","pages/Insurance/Insurance.js","pages/Service/Service.js","pages/Advantage/Advantage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setRem","pwidth","prem","html","document","getElementsByTagName","oWidth","body","clientWidth","documentElement","style","fontSize","TopNav","className","type","Slider","props","state","point","activeIndex","that","this","Swiper","loop","autoplay","delay","disableOnInteraction","direction","on","slideChange","console","log","setState","src","imgUrl","alt","require","map","item","index","key","React","Component","withRouter","routes","path","component","memo","route","renderRoutes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,2C,iBCMzCD,EAAOC,QAAU,CACfC,OAPS,SAAUC,EAAOC,GAC1B,IAAIC,EAAOC,SAASC,qBAAqB,QAAQ,GAC7CC,EAASF,SAASG,KAAKC,aAAeJ,SAASK,gBAAgBD,YACnEL,EAAKO,MAAMC,SAAWL,EAAOL,EAAOC,EAAO,Q,sHCH/CJ,EAAOC,QAAU,IAA0B,2C,8HCY5Ba,MAVf,WACI,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,QAAf,UACA,yBAAKA,UAAU,SACf,4BAAQC,KAAK,SAASD,UAAU,gBAAhC,qB,sECmDGE,E,kDArDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,CAAC,EAAE,EAAE,GACZC,YAAa,GAJF,E,gEAQf,IAAMC,EAAOC,KACI,IAAIC,IAAO,oBAAoB,CAC5CC,MAAK,EACLC,SAAU,CACNC,MAAO,IACPC,sBAAsB,GAE1BC,UAAY,aACZC,GAAI,CACAC,YAAa,WACTC,QAAQC,IAAIV,KAAKF,aACjBC,EAAKY,SAAS,CACVb,YAAaE,KAAKF,oB,+BAM5B,IAAD,EACwBE,KAAKJ,MAA3BC,EADF,EACEA,MAAOC,EADT,EACSA,YACd,OACI,yBAAKN,UAAU,qCACf,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,yBAAKoB,IAAKC,IAAQC,IAAI,MAE1B,yBAAKtB,UAAU,gBACX,yBAAKoB,IAAKG,EAAQ,IAAgCD,IAAI,MAE1D,yBAAKtB,UAAU,gBACX,yBAAKoB,IAAI,8BAA8BE,IAAI,OAGnD,yBAAKtB,UAAU,oBAEPK,EAAMmB,KAAI,SAACC,EAAKC,GAAN,OACN,yBAAKC,IAAKD,EAAO1B,UAAS,4BAAuB0B,EAAQ,IAAMpB,GAAeoB,EAAQ,IAAMpB,EAAc,SAAW,e,GA7CxHsB,IAAMC,WCOZC,ICyBAC,EA5BA,CACX,CACIC,KAAM,IACNC,UCKOC,gBAXf,SAAc/B,GACVc,QAAQC,IAAIf,GADK,IAEA4B,EAAY5B,EAArBgC,MAASJ,OACjB,OACI,yBAAK/B,UAAU,gBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACEoC,YAAaL,ODAnBA,OAAQ,CACJ,CACIC,KAAM,WACNC,UEbhB,WACI,OACI,2DFaI,CACID,KAAM,aACNC,UGjBhB,WACI,OACI,2DHiBI,CACID,KAAM,WACNC,UIrBhB,WACI,OACI,2DJqBI,CACID,KAAM,aACNC,UKzBhB,WACI,OACI,2DLyBI,CACID,KAAM,SACNC,UDpBDH,aARf,WACI,OACI,gEOgBOO,MAVf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACID,YAAaL,MCHHO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBCLNvD,iBAAO,IAAK,KACZwD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJtD,SAASuD,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrC,QAAQqC,MAAMA,EAAMC,c","file":"static/js/main.4e5d3b14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home_banner_1.21c39667.jpg\";","var setRem = function (pwidth,prem){\n    var html = document.getElementsByTagName(\"html\")[0];\n    var oWidth = document.body.clientWidth || document.documentElement.clientWidth;\n    html.style.fontSize = oWidth/pwidth*prem + \"px\";\n  }\n  \n  module.exports = {\n    setRem: setRem\n  };","module.exports = __webpack_public_path__ + \"static/media/home_banner_2.2e5adfde.jpg\";","import React from 'react'\nimport '../style/components/Header.less'\nfunction TopNav() {\n    return (\n        <div className='top_nav_box' >\n            <div className='menu'>三</div>\n            <div className='logo'></div>\n            <button type='button' className='btn_download'>下载APP</button>\n        </div>\n    )\n}\n\nexport default TopNav\n","import React, { useEffect, useState } from 'react'\nimport '../style/components/Slider.less'\nimport imgUrl from '../images/home_banner_1.jpg'\nimport Swiper from 'swiper'\nclass Slider extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            point: [1,2,3],\n            activeIndex: 1\n        }\n    }\n    componentDidMount() {\n        const that = this\n        const mySwiper = new Swiper('.slider_container',{\n            loop:true,\n            autoplay: {\n                delay: 3000,\n                disableOnInteraction: false\n            },\n            direction : 'horizontal',\n            on: {\n                slideChange: function() {\n                    console.log(this.activeIndex);\n                    that.setState({\n                        activeIndex: this.activeIndex\n                    })\n                }\n            }\n        })\n    }\n    render() {\n        const {point, activeIndex} = this.state\n        return (\n            <div className=\"swiper-container slider_container\">\n            <div className=\"swiper-wrapper\">\n                <div className=\"swiper-slide\">\n                    <img src={imgUrl} alt=\"\"/>\n                </div>\n                <div className=\"swiper-slide\">\n                    <img src={require('../images/home_banner_2.jpg')} alt=\"\"/>\n                </div>\n                <div className=\"swiper-slide\">\n                    <img src=\"../images/home_banner_3.jpg\" alt=\"\"/>\n                </div>\n            </div>\n            <div className='slider_point_box'>\n                {\n                    point.map((item,index) => (\n                        <div key={index} className={`slider_point_item ${index + 1 === activeIndex || index + 4 === activeIndex ? 'active' : ''}`}></div>\n                    ))\n                }\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default Slider\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nfunction About() {\n    return (\n        <div>\n            关于我们\n        </div>\n    )\n}\n\nexport default withRouter(About)\n","// import React from 'react'\n// import { Redirect } from 'react-router-dom'\nimport Home from '../pages/Home/Home'\nimport Advantage from '../pages/Advantage/Advantage'\nimport Article from '../pages/Article/Article'\nimport Insurance from '../pages/Insurance/Insurance'\nimport Service from '../pages/Service/Service'\nimport About from '../pages/About/About'\nconst routes = [\n    {\n        path: '/',\n        component: Home,\n        routes: [\n            {\n                path: '/article',\n                component: Article\n            },\n            {\n                path: '/insurance',\n                component: Insurance\n            },\n            {\n                path: '/service',\n                component: Service\n            },\n            {\n                path: '/advantage',\n                component: Advantage\n            },\n            {\n                path: '/about',\n                component: About\n            }\n        ]\n    }\n]\nexport default routes","import React, { memo } from 'react'\nimport { renderRoutes } from 'react-router-config';\nimport TopNav from '../../components/TopNav';\nimport '../../style/pages/Home.less'\nimport Slider from '../../components/Slider';\nfunction Home(props) {\n    console.log(props);\n    const { route : {routes} } = props\n    return (\n        <div className='home_wrapper'>\n            <Slider/>\n            <TopNav/>\n            { renderRoutes(routes)}\n        </div>\n    )\n}\nexport default memo(Home)\n","import React from 'react'\n\nfunction Article() {\n    return (\n        <div>\n            资讯文章\n        </div>\n    )\n}\n\nexport default Article\n","import React from 'react'\n\nfunction Insurance() {\n    return (\n        <div>\n            保险产品\n        </div>\n    )\n}\n\nexport default Insurance\n","import React from 'react'\n\nfunction Service() {\n    return (\n        <div>\n            服务体系\n        </div>\n    )\n}\n\nexport default Service\n","import React from 'react'\n\nfunction Advantage() {\n    return (\n        <div>\n            核心优势\n        </div>\n    )\n}\n\nexport default Advantage\n","/*\n * @Author: qinsensen\n * @Date: 2020-06-23 15:32:02\n * @LastEditors: qinsensen\n * @LastEditTime: 2020-06-23 17:45:09\n * @Description: \n */ \nimport React from 'react';\nimport { Switch, BrowserRouter } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\nimport routes from './routes';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        { renderRoutes(routes)}\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * @Author: qinsensen\n * @Date: 2020-06-23 15:32:02\n * @LastEditors: qinsensen\n * @LastEditTime: 2020-06-23 16:18:54\n * @Description: \n */ \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { setRem } from './utils/util.rem';\nimport './style/common/rest.less'\nsetRem(750, 100)\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}